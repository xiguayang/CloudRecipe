const passport = require('passport');
const mongoose = require('mongoose');
const GoogleStrategy = require('passport-google-oauth20');
const keys = require('../config/keys');
//the model class: pull out the model of mongoose
const User = mongoose.model('User');
passport.serializeUser((user, done) => {
	//user.id is the id generated by MongoDB
	done(null, user.id);
});
//deserilizeUser: search the Mongo model instance by the given id
passport.deserializeUser((id, done) => {
	User.findById(id).then((user) => {
		done(null, user);
	});
});
//create a new GoogelStrategy object
passport.use(
	new GoogleStrategy(
		{
			clientID: keys.googleClientID,
			clientSecret: keys.googleClientSecret,
			callbackURL: '/auth/google/callback',
			proxy: true,
		},
		async (accessToken, refreshToken, profile, done) => {
			const existingUser = await User.findOne({ googleId: profile.id });
			if (existingUser) {
				done(null, existingUser);
			}
			const user = await new User({
				googleId: profile.id,
				name: profile.displayName,
				// avatar: profile.photos[0].value,
			}).save();
			done(null, user);
		}
	)
);
